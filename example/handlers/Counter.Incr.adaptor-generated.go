
package handlers

//code generated by 'go generate', do not edit

import (
	"github.com/jargv/plumbus"
	"net/http"
	"reflect"
	"encoding/json"
	"fmt"
	"log"
)

//packages "used" even if not used below
var _ json.Delim
var _ log.Logger
var _ fmt.Formatter

func init(){
	
		v := Counter{}
		f := v.Incr
	
	typ := reflect.TypeOf(f)
	plumbus.RegisterAdaptor(typ, counter_incr_plumbus_adaptor)
}

func counter_incr_plumbus_adaptor(handler interface{}) http.HandlerFunc {
	responseError := func (res http.ResponseWriter, err error) {
		if err, ok := err.(plumbus.HTTPError); ok {
			http.Error(res, err.Error(), err.ResponseCode())
		} else {
			http.Error(res, "", http.StatusInternalServerError)
		}
	}

	_ = responseError //may not be used below!

	callback := handler.(func(
		
	)(
		
			*Counter,
		
	))

	return http.HandlerFunc(func(res http.ResponseWriter, req *http.Request){
		
		

		
		
			result0  := 
		

		callback(
			
		)

		
		

		
			
				
					{
						err := json.NewEncoder(res).Encode(result0)
						if err != nil {
							log.Printf("json encoding error: %s", err.Error())
							http.Error(res, "", http.StatusInternalServerError)
							return
						}
					}
				
			
		
	})
}
